{"version":3,"sources":["vue.js","vueComponents/job-card.js"],"names":["VueApp","Vue","createApp","data","jobsData","filterList","mounted","this","fetcher","methods","getLocal","console","log","fetch","then","res","json","setLocal","catch","err","JSON","parse","stringify","localStorage","setItem","getItem","filterPush","tag","includes","push","filterDeselect","i","length","splice","filterClear","component","emits","props","job","type","Object","required","filter","Array","template","company","logo","isNew","new","isFeatured","featured","position","role","level","postDate","postedAt","contract","location","langs","languages","tools","allTags","initArray","computed","logoAlt","watch","addFilter","$emit","isFiltered","every"],"mappings":"AAAA,MAAAA,OAAAC,IAAAC,UAAA,CACAC,KAAA,WACA,MAAA,CACAC,SAAA,GACAC,WAAA,GAEA,EACAC,QAAA,WACAC,KAAAC,SACA,EACAC,QAAA,CACAD,UAEA,OAAAD,KAAAG,YACAC,QAAAC,IAAA,qBACAC,MAAA,wBACAC,MAAAC,GAAAA,EAAAC,SACAF,MAAAX,IACAI,KAAAH,SAAAD,EACAI,KAAAU,SAAAd,EAAA,IAEAe,OAAAC,GAAAR,QAAAC,IAAAO,OAEAR,QAAAC,IAAA,wBACAL,KAAAH,SAAAgB,KAAAC,MAAAd,KAAAG,aAIAC,QAAAC,IAAA,sBAEAD,QAAAC,IAAAQ,KAAAC,MAAAD,KAAAE,UAAAf,KAAAH,WAGA,EACAa,SAAAd,GACAoB,aAAAC,QAAA,eAAAJ,KAAAE,UAAAnB,GACA,EACAO,SAAA,IACAa,aAAAE,QAAA,gBAEAC,WAAAC,GAEApB,KAAAF,WAAAuB,SAAAD,IACApB,KAAAF,WAAAwB,KAAAF,EAEA,EACAG,eAAAH,GACA,IAAA,IAAAI,EAAA,EAAAA,EAAAxB,KAAAF,WAAA2B,OAAAD,IAEAxB,KAAAF,WAAA0B,KAAAJ,GACApB,KAAAF,WAAA4B,OAAAF,EAAA,EAKA,EACAG,cACA3B,KAAAF,WAAA2B,OAAA,CAEA,KC3DAhC,OAAAmC,UAAA,WAAA,CACAC,MAAA,CAAA,cACAC,MAAA,CACAC,IAAA,CACAC,KAAAC,OACAC,UAAA,GAEAC,OAAA,CACAH,KAAAI,MACAF,UAAA,IAGAG,SAEA,20CAgCAzC,KAAA,WACA,MAAA,CACA0C,QAAAtC,KAAA+B,IAAAO,QACAC,KAAAvC,KAAA+B,IAAAQ,KACAC,MAAAxC,KAAA+B,IAAAU,IACAC,WAAA1C,KAAA+B,IAAAY,SACAC,SAAA5C,KAAA+B,IAAAa,SACAC,KAAA7C,KAAA+B,IAAAc,KACAC,MAAA9C,KAAA+B,IAAAe,MACAC,SAAA/C,KAAA+B,IAAAiB,SACAC,SAAAjD,KAAA+B,IAAAkB,SACAC,SAAAlD,KAAA+B,IAAAmB,SACAC,MAAAnD,KAAA+B,IAAAqB,UACAC,MAAArD,KAAA+B,IAAAsB,MACAC,QAAA,GAGA,EACAvD,QAAA,WACAC,KAAAuD,WACA,EACAC,SAAA,CACAC,QAAA,WACA,MAAA,QAAAzD,KAAAsC,QAAA,GACA,GAEAoB,MAAA,CAEA,EACAxD,QAAA,CACAyD,UAAAvC,GACApB,KAAA4D,MAAA,aAAAxC,EACA,EACAyC,aAEA,OAAA,IAAA7D,KAAAmC,OAAAV,UAGAzB,KAAAmC,OAAA2B,OAAA1C,GAAApB,KAAAsD,QAAAjC,SAAAD,IAKA,EACAmC,YACAvD,KAAAsD,QAAAhC,KAAAtB,KAAA6C,KAAA7C,KAAA8C,OACA9C,KAAAsD,QAAA,IAAAtD,KAAAsD,WAAAtD,KAAAmD,SAAAnD,KAAAqD,MACA","file":"all.js","sourcesContent":["const VueApp = Vue.createApp ({\r\n    data: function() {\r\n        return {\r\n            jobsData: [],\r\n            filterList: []\r\n        }\r\n    },\r\n    mounted: function() {\r\n        this.fetcher(); \r\n    },\r\n    methods: {\r\n        fetcher() {\r\n            // checking if there is stored data otherwise fetcheing new data from data.json file\r\n            if (this.getLocal() === null) {\r\n                console.log(\"fetching new data\");\r\n                fetch('./app/data/data.json')\r\n                .then((res) => res.json()) \r\n                .then((data) => {\r\n                    this.jobsData=data;\r\n                    this.setLocal(data);  \r\n                })\r\n                .catch((err) => console.log(err)); \r\n            } else {\r\n                console.log(\"fetching stored data\"); \r\n                this.jobsData = JSON.parse(this.getLocal());\r\n            }\r\n \r\n            // //checking \r\n            console.log(\"logging jobsData: \")\r\n            // //viewing array target conents\r\n            console.log(JSON.parse(JSON.stringify(this.jobsData)));  \r\n            // //accessing properties from the proxy, you can refer to this vid for more info on how to use proxies in js: https://www.youtube.com/watch?v=hI4AyjNnUzQ\r\n            // console.log(this.jobsData[0].id); \r\n        },\r\n        setLocal(data) {\r\n            localStorage.setItem(\"jobsDataJson\",JSON.stringify(data));\r\n        },\r\n        getLocal() {\r\n            return localStorage.getItem(\"jobsDataJson\");\r\n        }, \r\n        filterPush(tag) {\r\n            // checking if the tag is already in filters otherwise adding it \r\n            if (!this.filterList.includes(tag)) {\r\n                this.filterList.push(tag);\r\n            }  \r\n        },\r\n        filterDeselect(tag) {\r\n            for (let i = 0; i < this.filterList.length; i++) {\r\n                \r\n                if (this.filterList[i] === tag) { \r\n                    this.filterList.splice(i,1);\r\n                } \r\n                \r\n            }\r\n            \r\n        },\r\n        filterClear() { \r\n            this.filterList.length = 0;\r\n            \r\n        }\r\n    }\r\n})","VueApp.component('job-card', {\r\n    emits: ['add-filter'],\r\n    props: {\r\n        job: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        filter: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n    template: \r\n    /* html */ \r\n    `\r\n    <Transition name=\"slide-fade\">\r\n    <div class=\"jobCard\" :class=\"{jobCard__featured: isFeatured}\" v-show=\"isFiltered()\">\r\n        <div class=\"jobContentWrapper\">\r\n            <img :src=\"logo\" :alt=\"logoAlt\">\r\n            <div class=\"info\">\r\n                <div class=\"company\">\r\n                    <p class=\"companyName\">{{company}}</p>\r\n                    <p class=\"new\" v-show=\"isNew\">NEW!</p>\r\n                    <p class=\"featured\" v-show=\"isFeatured\">FEATURED</p>\r\n                </div>\r\n                <h1 class=\"position\">{{position}}</h1>\r\n                <p class=\"jobAttr\">\r\n                    {{postDate}}&nbsp;&nbsp;&nbsp;\r\n                    &bull;\r\n                    &nbsp;&nbsp;&nbsp;{{contract}}&nbsp;&nbsp;&nbsp;\r\n                    &bull;\r\n                    &nbsp;&nbsp;&nbsp;{{location}}</p>\r\n\r\n            </div>\r\n\r\n            <div class=\"attributes\">\r\n                <p class=\"attrTag\" @click=\"addFilter(role)\">{{role}}</p>\r\n                <p class=\"attrTag\" @click=\"addFilter(level)\">{{level}}</p>\r\n                <p class=\"attrTag\" v-for=\"(lang, index) in langs\" :key=\"index\" @click=\"addFilter(lang)\">{{lang}}</p>\r\n                <p class=\"attrTag\" v-for=\"(tool, index) in tools\" :key=\"index\" @click=\"addFilter(tool)\">{{tool}}</p>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    </Transition>\r\n    `,\r\n    data: function() {\r\n        return {\r\n            company: this.job.company,\r\n            logo: this.job.logo,\r\n            isNew: this.job.new,\r\n            isFeatured: this.job.featured,\r\n            position: this.job.position,\r\n            role: this.job.role,\r\n            level: this.job.level,\r\n            postDate: this.job.postedAt,\r\n            contract: this.job.contract,\r\n            location: this.job.location,\r\n            langs: this.job.languages,\r\n            tools: this.job.tools, \r\n            allTags: []\r\n\r\n        }\r\n    },\r\n    mounted: function(){\r\n        this.initArray();\r\n    },\r\n    computed: {\r\n        logoAlt: function() {\r\n            return \"icon-\"+this.company+\".\";\r\n        }\r\n    },\r\n    watch: {\r\n\r\n    },\r\n    methods: {\r\n        addFilter(tag) { \r\n            this.$emit('add-filter',tag);\r\n        },\r\n        isFiltered() {\r\n            // checking if this card got all the tags in the filter bar when it's not empty\r\n            if (this.filter.length === 0) {\r\n                return true;\r\n\r\n            }else if ( this.filter.every(tag => {return this.allTags.includes(tag)}) ) {\r\n                return true;\r\n\r\n            }else return false;\r\n                \r\n        }, \r\n        initArray() {\r\n            this.allTags.push(this.role, this.level); \r\n            this.allTags = [...this.allTags, ...this.langs, ...this.tools];\r\n        } \r\n    }\r\n    \r\n}) "]}